[project]
name = "KonomiTV"
version = "0.12.0"
description = "KonomiTV: Kept Organized, Notably Optimized, Modern Interface TV media server"
requires-python = ">=3.11,<3.12"
dependencies = [
    "aerich>=0.8.1,<0.9",
    "aiofiles>=24.1.0,<25",
    "aiohttp>=3.11.10,<4",
    "ariblib",
    "beautifulsoup4>=4.12.3,<5",
    "biim",
    "colorama>=0.4.6,<0.5",
    "elevate>=0.1.3,<0.2",
    "fastapi>=0.115.6,<0.116",
    "fastapi-utils>=0.8.0,<0.9",
    "hashids>=1.3.1,<2",
    "httpx[http2]>=0.28.1,<0.29",
    "opencv-python-headless>=4.11.0.86,<5",
    "passlib[bcrypt]>=1.7.4,<2",
    "pillow>=11.0.0,<12",
    "ping3>=4.0.8,<5",
    "psutil>=5.9.6,<6",
    "puremagic~=1.28",
    "py7zr>=0.22.0,<0.23",
    "pydantic>=2.10.3,<3",
    "pymediainfo>=6.1.0,<7",
    "python-jose[cryptography]>=3.4.0,<4",
    "python-multipart>=0.0.20,<0.0.21",
    "pywin32>=308,<309 ; sys_platform == 'win32'",
    "requests>=2.32.4,<3",
    "rich>=13.9.4,<14",
    "ruamel.yaml>=0.18.10,<0.19",
    "ruff>=0.9.1,<0.10",
    "sse-starlette>=2.1.3,<3",
    "taskipy>=1.14.1,<2",
    "tortoise-orm>=0.23.0,<0.24",
    "typer>=0.15.1,<0.16",
    "typing-extensions>=4.12.2,<5",
    "typing-inspect>=0.9.0,<0.10",
    "tweepy>=4.14.0,<5",
    "tweepy-authlib>=1.5.6,<2",
    "tzdata~=2024.2",
    "uvicorn[standard]>=0.34.0,<0.35",
    "uvloop>=0.21.0,<0.22 ; sys_platform == 'linux'",
    "watchfiles>=1.0.4,<2",
    "winloop>=0.1.8,<0.2 ; sys_platform == 'win32'",
    "apscheduler>=3.11.0",
]

[dependency-groups]
dev = []

[tool.taskipy.tasks]
serve = "python KonomiTV.py"
dev = "python KonomiTV.py --reload"
lint = "ruff check --fix ."
update-thirdparty = "python -m misc.UpdateThirdparty latest"

[tool.uv]
package = false

[tool.uv.sources]
ariblib = { url = "https://github.com/tsukumijima/ariblib/releases/download/v0.1.4/ariblib-0.1.4-py3-none-any.whl" }
biim = { url = "https://github.com/tsukumijima/biim/releases/download/v1.10.2-patch2/biim-1.10.2-py3-none-any.whl" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.aerich]
tortoise_orm = "app.constants.DATABASE_CONFIG"
location = "./app/migrations/"
src_folder = "./"

[tool.ruff]
# インデントの幅を4スペースに設定
indent-width = 4
# Python 3.11 を利用する
target-version = "py311"
# data/, thirdparty/ ディレクトリは対象から除外する
extend-exclude = ["data/", "thirdparty/"]

[tool.ruff.lint]
# flake8, pycodestyle, pyupgrade, isort, Ruff 固有のルールを使う
select = ["F", "E", "W", "UP", "I", "RUF", "TID251"]
ignore = [
    "E501",    # 1行の長さを超えている場合の警告を抑制
    "E731",    # Do not assign a `lambda` expression, use a `def` を抑制
    "RUF001",  # 全角記号など `ambiguous unicode character` も使いたいため
    "RUF002",  # 全角記号など `ambiguous unicode character` も使いたいため
    "RUF003",  # 全角記号など `ambiguous unicode character` も使いたいため
    "RUF012",
]

[tool.ruff.lint.isort]
# インポートブロックの後に2行空ける
lines-after-imports = 2

[tool.ruff.lint.flake8-tidy-imports.banned-api]
# Python 3.11 + Pydantic で TypedDict を扱う際は、typing_extensions.TypedDict を使う必要がある
# ref: https://github.com/langchain-ai/langgraph/pull/2910
"typing.TypedDict".msg = "Use typing_extensions.TypedDict instead."
